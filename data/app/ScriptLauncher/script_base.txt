local function getToolName(st)
    for key, v in pairs(st['Tools']) do
        if (type(v) == 'table') and (v['Inputs'] ~= nil) then
            return key
        end
    end
    return nil
end

local function getAnim(st)
    local r = {}
    for key, v in pairs(st['Tools']) do
        if (type(v) == 'table') and (v['__ctor'] == 'BezierSpline') then
            r[key] = v
        end
    end
    return r
end

local function setData(path, filter_list)
    local tool_list = comp:GetToolList(true)
    comp:StartUndo('apply setting')
    for i, v in pairs(tool_list) do
        local st = v:SaveSettings()
        local anim = getAnim(st)
        local f_st = bmd.readfile(path)
        local f_name = getToolName(f_st)
        for i2, key in pairs(filter_list) do
            f_st['Tools'][f_name]['Inputs'][key] = st['Tools'][v.Name]['Inputs'][key]
            local tmp = f_st['Tools'][f_name]['Inputs'][key]
            if (type(tmp) == 'table') and (tmp['SourceOp'] ~= nil) then
                local src = tmp['SourceOp']
                f_st['Tools'][src] = anim[src]
            end
        end
        v:LoadSettings(f_st)
    end
    comp:EndUndo(true)
    print('Done!: ' .. path)
end

setData(
        '%s',
        {
%s
        }
)

